AWSTemplateFormatVersion: "2010-09-09"
Description: Billing Alerts for your AWS Account

Parameters:
  Email:
    Type: String
    Default: dst-student@datascientest.com
    Description: The Datascientest admin email address to receive alerts per email
  EmailStudent:
    Type: String
    Default: ahmedhosni.contact@gmail.com
    Description: The Student email address to receive alerts per email
  WarningLevel:
    Type: String
    Default: "100"
    Description: The Warning level of Billing alarm, this would trigger the freeze CodePipeline process

Resources:
  BillingAlert:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref BillingAlertTopic
      AlarmDescription:
        !Join [
          "",
          [Alert for $,  !Ref WarningLevel ],
        ]
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Currency
          Value: USD
      EvaluationPeriods: 1
      MetricName: EstimatedCharges
      Namespace: AWS/Billing
      Period: 300
      TreatMissingData: ignore
      Statistic: Maximum
      Threshold:  !Ref WarningLevel 

  BillingAlertTopic:
    Type: AWS::SNS::Topic

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: AwsLambdaMinimalExample
      Handler: index.handler
      Runtime: nodejs14.x
      Role: !GetAtt LambdaFunctionRole.Arn
      MemorySize: 1024
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            return "Hello World!";
          }
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: SandboxLambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - codepipeline:*
            Resource: "*"
          - Effect: Allow
            Action:
            - 'sns:Subscribe'
            - 'sns:Receive'
            - 'sns:Unsubscribe'
            Resource: !Ref BillingAlertTopic
  
  AlarmSubscriberAdminEmail:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref Email
      Protocol: email
      TopicArn: !Ref BillingAlertTopic

  AlarmSubscriberStudentEmail:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref EmailStudent
      Protocol: email
      TopicArn: !Ref BillingAlertTopic

  AlarmSubscriberLambda:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt LambdaFunction.Arn
      Protocol: lambda
      TopicArn: !Ref BillingAlertTopic
    DependsOn:
      - LambdaFunction
